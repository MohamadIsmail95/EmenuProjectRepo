// <auto-generated />
using System;
using EmenuDAL.EmenuDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmenuDAL.Migrations
{
    [DbContext(typeof(EmenuAppDbContext))]
    partial class EmenuAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmenuDAL.Model.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("EmenuDAL.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnglishDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ArabicName")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EmenuDAL.Model.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("VarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VarId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("EmenuDAL.Model.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsMainImage")
                        .HasColumnType("bit");

                    b.Property<int>("ProductAttId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("EmenuDAL.Model.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("EmenuDAL.Model.ProductAttribute", b =>
                {
                    b.HasOne("EmenuDAL.Model.Attribute", "Attribute")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributId");

                    b.HasOne("EmenuDAL.Model.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmenuDAL.Model.Variant", "Variant")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("VarId");

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("EmenuDAL.Model.ProductImage", b =>
                {
                    b.HasOne("EmenuDAL.Model.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductAttId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("EmenuDAL.Model.Variant", b =>
                {
                    b.HasOne("EmenuDAL.Model.Attribute", "Attribute")
                        .WithMany("Variants")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("EmenuDAL.Model.Attribute", b =>
                {
                    b.Navigation("ProductAttributes");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EmenuDAL.Model.Product", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("EmenuDAL.Model.ProductAttribute", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("EmenuDAL.Model.Variant", b =>
                {
                    b.Navigation("ProductAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
